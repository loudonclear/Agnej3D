COMPLETE/INCOMPLETE

Retries used: NONE (5 retries left)

[ ] Completed a design check
[ ] Participated in playtesting

Common Engine Requirements
========================================
	Primary Requirements
	--------------------
		[ ] Uses primitive wrapper class for drawing arbitrary geometry
		    [ ] Supports VAO/VBO creation and cleanup
		    [ ] Supports sending data to the VBO
		    [ ] Supports drawing the geometry stored in the VBO
		[ ] Entity/World hierarchy
			[ ] Virtual Entity class representing a single logical game object with (minimally) the following contract:
				[ ] Timed updates (tick)
				[ ] Render events (draw)
				[ ] Creation of a collision shape (for now, getCylinder)
				[ ] Instance variables for position, velocity, and an acceleration accumulator
			[ ] Virtual World class representing a collection of Entities with (minimally) the following contract:
				[ ] Timed updates (tick)
				[ ] Render events (draw)
				[ ] Entity management (add/remove an Entity)
		[ ] World has collision loop and entities have collision callback
		[ ] Cylinder-cylinder collision detection
			[ ] Detection - determine that two cylinders are overlapping
		[ ] Third person support built into your camera, with the ability to toggle between the two cameras

	Secondary Requirements
	----------------------
		[ ] Cylinder-cylinder collision resolution, and generation of a response callback
			[ ] Resolution - translate the cylinders out of detection using the MTV
			[ ] Response - dispatches collision callback to collided Entities

Game Requirements
========================================
	Primary Requirements
	--------------------
		[ ] All Warmup1 primary and secondary game requirements must be fulfilled
		[ ] The player can use a key to toggle between first and third person cameras

	Secondary Requirements
	----------------------
		[ ] Cylinder-cylinder collision response must be used somewhere
		[ ] There must be at least 1 NPC (non-player character), such as an enemy or opponent

	Tertiary Requirements
	---------------------
		[ ] At least 1 NPC (non-player character) with basic AI
		[ ] The game must have a non-arbitrary and reasonably achievable win or loss condition
		[ ] The game must be resettable upon win or loss without restarting the program
		[ ] The game can never enter an unwinnable or unloseable state

Global requirements
========================================
[ ] Top-level handin directory contains a Qt project file, a README, and an INSTRUCTIONS file
[ ] README has a copy of the rubric with explanations of how to verify requirements
[ ] README documents any known bugs
[ ] README indicates number of hours taken
[ ] INSTRUCTIONS contains all information needed to play the game
[ ] Engine and game code logically separated
[ ] Engine code well designed
[ ] Game code well designed
[ ] Runs on department machines
[ ] Does not crash
[ ] Works at 800x600 and fullscreen resolutions
[ ] Runs at 30+ UPS and never dips below 20 UPS unless indicated in the specific handout

